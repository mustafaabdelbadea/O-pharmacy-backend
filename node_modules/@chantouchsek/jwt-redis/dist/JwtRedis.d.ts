/// <reference types="node" />
import * as redis from 'redis';
import { Secret, SignOptions, DecodeOptions, VerifyOptions, GetPublicKeyOrSecret } from "jsonwebtoken";
export interface Options {
    prefix: string;
}
export default class JwtRedis {
    private readonly client;
    private readonly options;
    private readonly redis;
    constructor(client: redis.RedisClient, options?: Options);
    sign<T extends object & {
        jti?: string;
    }>(payload: T, secretOrPrivateKey: Secret, options?: SignOptions): Promise<string>;
    destroy(jti: string): Promise<void>;
    decode<T>(token: string, options?: DecodeOptions): T;
    verify<T extends object & {
        jti?: string;
    }>(token: string, secretOrPublicKey: string | Buffer | GetPublicKeyOrSecret, options?: VerifyOptions): Promise<T>;
}
